# ------------
# Various Jobs
# ------------
stages:
  - check
  - build
  - test
  - deploy

# ------------
# Stage: check
# ------------
clang-format:
  stage: check
  image: ubuntu:20.04
  before_script:
    - apt-get update -y
    - apt-get install -y libtool clang-format clang-tidy
  script:
    - find . -regex '.*\.\(ino\|cpp\|hpp\|cc\|cxx\|h\)' -exec cat {} \; | diff -u <(find . -regex '.*\.\(ino\|cpp\|hpp\|cc\|cxx\|h\)' -exec clang-format -style=file {} -verbose \;) -

buildifier:
  stage: check
  image: ubuntu:20.04
  before_script:
    - apt-get update -y
    - apt-get install -y wget curl
    - wget https://github.com/bazelbuild/buildtools/releases/download/3.4.0/buildifier
    - chmod +x buildifier
    - mv buildifier /usr/bin
  script:
    - buildifier -v -d -r .

cppcheck:
  stage: check
  image: ubuntu:20.04
  before_script:
    - apt-get update -y
    - apt-get install -y cppcheck python python-pygments
  script:
    - cppcheck --template=gcc --enable=all --inconclusive --std=c++14 -I perception/**/*.h perception/**/*.cpp  > static_code_analysis.log
    - cppcheck --template=gcc --enable=all --inconclusive --std=c++14 -I perception/**/*.h perception/**/*.cpp --xml 2> static_code_analysis.xml
    - cppcheck-htmlreport --file=static_code_analysis.xml --report-dir=static_code_analysis_report --source-dir=.
  artifacts:
    name: static_code_analysis
    paths:
      - static_code_analysis_report/
      - static_code_analysis.xml
      - static_code_analysis.log
    expire_in: 7 days

# ------------
# Stage: Build
# ------------
bazel-build:
  stage: build
  image: ubuntu:20.04
  before_script:
    - apt-get update && apt-get install -y build-essential curl
    - curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
    - echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list
    - apt-get update && apt-get install -y bazel
  script:
    - bazel build //...